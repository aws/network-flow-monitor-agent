#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

source bin/set-env-vars

help_msg=$(cat <<EOF
Commits performance graphs and baseline reports to PR branch
Usage: $0 --graph-id <id> --base-ref <ref>
Examples:
    $0 --graph-id pr-123 --base-ref main
EOF
)

graph_id=""
base_ref=""

while [[ $# -gt 0 ]]; do
    case "$1" in
        --graph-id=*) graph_id="${1#*=}" ;;
        --graph-id) graph_id="$2"; shift ;;
        --base-ref=*) base_ref="${1#*=}" ;;
        --base-ref) base_ref="$2"; shift ;;
        --help|-h) echo "$help_msg"; exit 0 ;;
        *) echo "Unknown option: $1"; echo "$help_msg"; exit 1 ;;
    esac
    shift
done

if [[ -z "$graph_id" ]]; then
    echo "ERROR: --graph-id is required"
    exit 1
fi

log "${CYAN}Committing performance results to PR branch...${NC}"

# Copy graphs to permanent location
if [[ -d "results-${graph_id}/graphs" ]]; then
    log "Copying performance graphs..."
    mkdir -p performance-graphs
    cp results-${graph_id}/graphs/*.png performance-graphs/
fi

# Copy baseline reports if targeting main branch
if [[ "$base_ref" == "main" && -d "results-${graph_id}" ]]; then
    log "Updating baseline reports..."
    mkdir -p baseline-reports
    cp results-${graph_id}/*_tps-report.json baseline-reports/ || true
fi

# Configure git
git config user.name "github-actions[bot]"
git config user.email "github-actions[bot]@users.noreply.github.com"

# Add and commit changes
changes_made=false

if [[ -d "performance-graphs" ]] && [[ -n "$(ls -A performance-graphs 2>/dev/null)" ]]; then
    git add performance-graphs/
    changes_made=true
fi

if [[ -d "baseline-reports" ]] && [[ -n "$(ls -A baseline-reports 2>/dev/null)" ]]; then
    git add baseline-reports/
    changes_made=true
fi

if [[ "$changes_made" == "true" ]]; then
    if git commit -m "Add performance test results and update baselines"; then
        log "${GREEN}Committed performance results${NC}"
        if git push; then
            log "${GREEN}Pushed performance results to PR branch${NC}"
        else
            log "${RED}Failed to push performance results${NC}"
            exit 1
        fi
    else
        log "${YELLOW}No changes to commit${NC}"
    fi
else
    log "${YELLOW}No performance results to commit${NC}"
fi