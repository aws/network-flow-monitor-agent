#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

help_msg=$(cat <<EOF
Invoke test suite on EC2 instances
Usage: $0 [--region region]
Examples:
    $0 --region us-west-2 --bucket my-bucket
EOF
)

region=""
bucket=""
graph_identifier="pr-latest"

while [[ $# -gt 0 ]]; do
    case "$1" in
        --region=*) region="${1#*=}" ;;
        --region) region="$2"; shift ;;
        --bucket=*) bucket="${1#*=}" ;;
        --bucket) bucket="$2"; shift ;;
        --graph_identifier=*) graph_identifier="${1#*=}" ;;
        --graph_identifier) graph_identifier="$2"; shift ;;
        --help|-h) echo "$help_msg"; exit 0 ;;
        *) echo "Unknown option: $1"; echo "$help_msg"; exit 1 ;;
    esac
    shift
done

if [[ -z $bucket ]]; then
    echo "ERROR: bucket is required to store & exchange data between test executor and orchestrator hosts"
    exit 1
fi

if [[ -z $region ]]; then
    echo "ERROR: region is required as tests are regional"
    exit 1
fi

# Assign test artifact storage bucket
sed -i "s/^LOAD_TEST_S3_BUCKET=.*/LOAD_TEST_S3_BUCKET='$bucket'/" bin/set-env-vars

source bin/set-env-vars

# Create unique identifier for this test run
UNIQUE_ID="${USER:-$(whoami)}-$(date +%s)"
test_bundle_name="load-test-scripts-${UNIQUE_ID}.tgz"

log "Building test artifacts..."

# Build bpftop
#bin/build-bpftop

## Create the bundle with built binaries
#tar --transform 's/.*\///g' -czf "$test_bundle_name" \
#    ../target/release/network-flow-monitor-agent \
#    ../target/release/tcp-tester \
#    ../load-generator/bin/* \
#    /tmp/bpftop/bpftop/target/release/bpftop

#log "Uploading $test_bundle_name test artifact to S3..."
#bin/upload-to-s3 "$test_bundle_name" "scripts/$test_bundle_name"

#log "Downloading and extracting artifacts on test instances..."
#bin/run-ssm-command async "aws s3 cp s3://$LOAD_TEST_S3_BUCKET/scripts/$test_bundle_name /usr/tmp/$test_bundle_name"

#log "Unpacking artifacts"
#bin/run-ssm-command async "cd /usr/tmp && mkdir -p bin && tar -xzf $test_bundle_name --directory bin && sudo mv bin/bpftop /usr/local/sbin 2>/dev/null || true && sudo mv bin/network-flow-monitor-agent /usr/local/sbin && sudo mv bin/tcp-tester /usr/local/sbin && rm $test_bundle_name && sudo rm -rf /usr/tmp/results && sudo rm -rf /usr/tmp/*.tgz"

#log "Preparing test environment..."
#bin/run-ssm-command async "cd /usr/tmp && sudo --preserve-env bin/prepare-environment"

#log "Running load test suite..."
#bin/run-load-test-suite \
#    --region $region \
#    --duration_sec 300

log "Fetching and generating results..."
bin/fetch-and-graph-results --graph-title $graph_identifier

rm -f "$test_bundle_name"