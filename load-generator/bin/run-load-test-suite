#!/bin/bash

# Run this script from your dispatch host to coordinate load tests across the
# full spectrum of TPS rates against every host in your fleet.

set -o errexit
set -o pipefail
set -o nounset

source bin/set-env-vars

# Function to display usage
show_usage() {
    echo -e "[O]ptional and [M]andatory parameters exists:
        [M] region: mandatory, will determine agents endpoint
        [O] tps_steps: can be fed manually, or will be read from set-env-vars
        [O] flamegraph: this will generate flamegraphs
    $CYAN ./fetch-and-graph-results --graph_title='v1.1' $NC"
    exit 1
}

region=""
tps_steps=""
help=""
flamegraph=""
duration_sec=300

while [[ $# -gt 0 ]]; do
   case "$1" in
        --region=*) region="${1#*=}" ;;
        --region) region="$2"; shift ;;

        --tps-values=*) tps_steps="${1#*=}" ;;
        --tps-values) tps_steps="$2"; shift ;;

        --duration_sec=*) duration_sec="${1#*=}" ;;
        --duration_sec) duration_sec="$2"; shift ;;

        --help) help="true" ;;
        --flamegraph) flamegraph="flamegraph" ;;
   esac
   shift
done

if [[ $help == "true" ]]; then
    show_usage
fi

if [[ -z $tps_steps ]]; then
    log "Reading tps_steps from config as $LOAD_TEST_TPS_STEPS"
    tps_steps=$LOAD_TEST_TPS_STEPS
fi

# Check mandatory parameters
if [[ -z $region ]]; then
    log "ERROR: region must be supplied"
    show_usage
fi

# Display parameters
log "Parameters received:"
log "Region: $region"

response_delay_ms=0

IFS=',' read -ra TPS_ARRAY <<< "$tps_steps"
for i in "${!TPS_ARRAY[@]}"; do
    tps="${TPS_ARRAY[$i]}"

    log "${GREEN}Starting TPS iteration: ${CYAN} $tps ${NC}"
    # Run each load test long enough to complete multiple publish periods, plus buffer.
    bin/run-ssm-command async "cd /usr/tmp &&
    export PATH=\$PATH:/usr/sbin &&
    sudo bin/perform-load-test $tps $response_delay_ms $region $duration_sec $flamegraph"
    log "${GREEN}Completed TPS iteration: ${CYAN} $tps ${NC} "

    # Skip sleep for the last iteration
    if [ $i -lt $((${#TPS_ARRAY[@]} - 1)) ]; then
        log "${YELLOW}Force closing TCP connections in network namespaces${NC}"
        bin/run-ssm-command async "sudo ip netns exec nfm-perf-test-client ss -K state all 2>/dev/null || true && sudo ip netns exec nfm-perf-test-tcp-tester ss -K state all 2>/dev/null || true && sudo ip netns exec nfm-perf-test-server ss -K state all 2>/dev/null || true"
        log "TCP connections reset, proceeding to next iteration"
    fi
done

log "Exiting perform-load-test-suite"
